{
    "openapi": "3.0.0",
    "info": {
        "title": "Bilkis E-commerce API",
        "description": "Comprehensive API documentation for Bilkis e-commerce platform. This API provides complete functionality for managing an online store including user authentication, product catalog, shopping cart, order processing, and address management.",
        "contact": {
            "name": "Bilkis Development Team",
            "email": "bilqisshally@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        },
        {
            "url": "https://api.bilkis.com",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieve a paginated list of all product categories",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Category"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 45
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new product category",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CreateCategoryRequest": {
                "title": "Create Category Request",
                "description": "Request body for creating a new category",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Category name (unique)",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Electronics"
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "title": "Update Category Request",
                "description": "Request body for updating a category",
                "properties": {
                    "name": {
                        "description": "Category name (unique)",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Consumer Electronics"
                    }
                },
                "type": "object"
            },
            "CreateProductRequest": {
                "title": "Create Product Request",
                "description": "Request body for creating a new product",
                "required": [
                    "name",
                    "price",
                    "category_id"
                ],
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "iPhone 15 Pro"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "example": "Latest iPhone with pro features and advanced camera system",
                        "nullable": true
                    },
                    "image_url": {
                        "description": "Product image URL",
                        "type": "string",
                        "example": "https://example.com/images/iphone15pro.jpg",
                        "nullable": true
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 1199.99
                    },
                    "category_id": {
                        "description": "Category ID this product belongs to",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateProductRequest": {
                "title": "Update Product Request",
                "description": "Request body for updating a product",
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "iPhone 15 Pro Max"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "nullable": true
                    },
                    "image_url": {
                        "description": "Product image URL",
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "category_id": {
                        "description": "Category ID this product belongs to",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AddToCartRequest": {
                "title": "Add to Cart Request",
                "description": "Request body for adding items to cart",
                "required": [
                    "product_id",
                    "quantity"
                ],
                "properties": {
                    "product_id": {
                        "description": "Product ID to add to cart",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity to add",
                        "type": "integer",
                        "maximum": 999,
                        "minimum": 1,
                        "example": 2
                    }
                },
                "type": "object"
            },
            "UpdateCartRequest": {
                "title": "Update Cart Request",
                "description": "Request body for updating cart item quantity",
                "properties": {
                    "quantity": {
                        "description": "New quantity",
                        "type": "integer",
                        "maximum": 999,
                        "minimum": 1,
                        "example": 3
                    }
                },
                "type": "object"
            },
            "CreateOrderRequest": {
                "title": "Create Order Request",
                "description": "Request body for creating a new order",
                "properties": {
                    "shipping_address_id": {
                        "description": "Shipping address ID",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "payment_proof": {
                        "description": "Payment proof file path or URL",
                        "type": "string",
                        "example": "/uploads/payment_proof_123.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateOrderRequest": {
                "title": "Update Order Request",
                "description": "Request body for updating an order",
                "properties": {
                    "shipping_address_id": {
                        "description": "Shipping address ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "payment_proof": {
                        "description": "Payment proof file path or URL",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Order status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateUserAddressRequest": {
                "title": "Create User Address Request",
                "description": "Request body for creating a new user address",
                "required": [
                    "label",
                    "recipient_name",
                    "phone",
                    "address_line_1",
                    "city",
                    "state",
                    "postal_code",
                    "country"
                ],
                "properties": {
                    "label": {
                        "description": "Address label/name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Home"
                    },
                    "recipient_name": {
                        "description": "Name of the recipient",
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "phone": {
                        "description": "Phone number for delivery",
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1234567890"
                    },
                    "address_line_1": {
                        "description": "Primary address line",
                        "type": "string",
                        "maxLength": 255,
                        "example": "123 Main Street"
                    },
                    "address_line_2": {
                        "description": "Secondary address line",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Apartment 4B",
                        "nullable": true
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "New York"
                    },
                    "state": {
                        "description": "State/Province",
                        "type": "string",
                        "maxLength": 100,
                        "example": "NY"
                    },
                    "postal_code": {
                        "description": "Postal/ZIP code",
                        "type": "string",
                        "maxLength": 20,
                        "example": "10001"
                    },
                    "country": {
                        "description": "Country name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "USA"
                    },
                    "is_default": {
                        "description": "Whether this should be the default address",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "UpdateUserAddressRequest": {
                "title": "Update User Address Request",
                "description": "Request body for updating a user address",
                "properties": {
                    "label": {
                        "description": "Address label/name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "recipient_name": {
                        "description": "Name of the recipient",
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone": {
                        "description": "Phone number for delivery",
                        "type": "string",
                        "maxLength": 20
                    },
                    "address_line_1": {
                        "description": "Primary address line",
                        "type": "string",
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "description": "Secondary address line",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "description": "State/Province",
                        "type": "string",
                        "maxLength": 100
                    },
                    "postal_code": {
                        "description": "Postal/ZIP code",
                        "type": "string",
                        "maxLength": 20
                    },
                    "country": {
                        "description": "Country name",
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_default": {
                        "description": "Whether this should be the default address",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "roles": {
                        "description": "User roles",
                        "type": "string",
                        "example": "customer",
                        "nullable": true
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Product category model",
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Category name",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "slug": {
                        "description": "Category slug (auto-generated)",
                        "type": "string",
                        "example": "electronics"
                    },
                    "products_count": {
                        "description": "Number of products in this category (when loaded)",
                        "type": "integer",
                        "example": 25
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "example": "iPhone 15"
                    },
                    "slug": {
                        "description": "Product slug (auto-generated)",
                        "type": "string",
                        "example": "iphone-15"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "example": "Latest iPhone model with advanced features",
                        "nullable": true
                    },
                    "image_url": {
                        "description": "Product image URL",
                        "type": "string",
                        "example": "https://example.com/images/iphone15.jpg",
                        "nullable": true
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float",
                        "example": 999.99
                    },
                    "category_id": {
                        "description": "Category ID this product belongs to",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    }
                },
                "type": "object"
            },
            "Cart": {
                "title": "Cart",
                "description": "Shopping cart item model",
                "properties": {
                    "id": {
                        "description": "Cart item ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID who owns this cart item",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "Product ID in the cart",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Customer order model",
                "properties": {
                    "id": {
                        "description": "Order ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID who placed the order",
                        "type": "integer",
                        "example": 1
                    },
                    "shipping_address_id": {
                        "description": "Shipping address ID",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "total_price": {
                        "description": "Total order amount",
                        "type": "number",
                        "format": "float",
                        "example": 1999.98
                    },
                    "payment_proof": {
                        "description": "Payment proof file path or URL",
                        "type": "string",
                        "example": "/uploads/payment_proof_123.jpg",
                        "nullable": true
                    },
                    "status": {
                        "description": "Order status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/UserAddress"
                    },
                    "orderDetails": {
                        "description": "Order details relationship (when loaded)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderDetail"
                        }
                    }
                },
                "type": "object"
            },
            "OrderDetail": {
                "title": "OrderDetail",
                "description": "Order line item model",
                "properties": {
                    "id": {
                        "description": "Order detail ID",
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "description": "Order ID this detail belongs to",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "Product ID in the order",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity ordered",
                        "type": "integer",
                        "example": 2
                    },
                    "price": {
                        "description": "Price per unit at time of order",
                        "type": "number",
                        "format": "float",
                        "example": 999.99
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    }
                },
                "type": "object"
            },
            "UserAddress": {
                "title": "UserAddress",
                "description": "User shipping address model",
                "properties": {
                    "id": {
                        "description": "Address ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "User ID this address belongs to",
                        "type": "integer",
                        "example": 1
                    },
                    "label": {
                        "description": "Address label/name",
                        "type": "string",
                        "example": "Home"
                    },
                    "recipient_name": {
                        "description": "Name of the recipient",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone": {
                        "description": "Phone number for delivery",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address_line_1": {
                        "description": "Primary address line",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "address_line_2": {
                        "description": "Secondary address line",
                        "type": "string",
                        "example": "Apartment 4B",
                        "nullable": true
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "description": "State/Province",
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "description": "Postal/ZIP code",
                        "type": "string",
                        "example": "10001"
                    },
                    "country": {
                        "description": "Country name",
                        "type": "string",
                        "example": "USA"
                    },
                    "is_default": {
                        "description": "Whether this is the default address",
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-19T10:00:00.000000Z"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "ValidationError",
                "description": "Validation error response",
                "properties": {
                    "code": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 422
                    },
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Validation errors by field",
                        "type": "object",
                        "example": {
                            "name": [
                                "The name field is required."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "ErrorResponse",
                "description": "General error response",
                "properties": {
                    "code": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 404
                    },
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Resource not found"
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "SuccessResponse",
                "description": "Standard success response",
                "properties": {
                    "code": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 200
                    },
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "description": "Success message",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "description": "Response data (varies by endpoint)"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "title": "PaginatedResponse",
                "description": "Paginated response wrapper",
                "properties": {
                    "code": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 200
                    },
                    "status": {
                        "description": "Response status",
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "description": "Success message",
                        "type": "string",
                        "example": "Data retrieved successfully"
                    },
                    "data": {
                        "description": "Paginated data",
                        "properties": {
                            "data": {
                                "description": "Array of data items",
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "current_page": {
                                "description": "Current page number",
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "description": "Last page number",
                                "type": "integer",
                                "example": 5
                            },
                            "per_page": {
                                "description": "Items per page",
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "description": "Total number of items",
                                "type": "integer",
                                "example": 75
                            },
                            "from": {
                                "description": "Starting item number",
                                "type": "integer",
                                "example": 1
                            },
                            "to": {
                                "description": "Ending item number",
                                "type": "integer",
                                "example": 15
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication. Include the token in the Authorization header as 'Bearer {token}'",
                "bearerFormat": "token",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Product category CRUD operations. Categories organize products and support hierarchical structure."
        }
    ]
}