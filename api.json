{
    "openapi": "3.1.0",
    "info": {
        "title": "Bilkis E-commerce API",
        "version": "1.0.0",
        "description": "Comprehensive API documentation for Bilkis e-commerce platform. This API provides complete functionality for managing an online store including user authentication, product catalog, shopping cart, order processing, and address management."
    },
    "servers": [
        {
            "url": "http://localhost/api"
        }
    ],
    "paths": {
        "/auth/check": {
            "post": {
                "operationId": "check",
                "summary": "Check if the email address is already registered",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email already registered"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                404
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email not found"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                400
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Email is required"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "operationId": "login",
                "summary": "Authenticate a user and create a token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "operationId": "register",
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "operationId": "user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User retrieved successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                401
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthenticated - No token cookie found"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "operationId": "logout",
                "summary": "Revoke the current user's token",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/carts": {
            "get": {
                "operationId": "admin.carts.index",
                "summary": "Admin: Display a listing of all cart items",
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart items retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/carts/{cart}": {
            "get": {
                "operationId": "admin.carts.show",
                "summary": "Admin: Display the specified cart item",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "required": true,
                        "description": "The cart ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart item retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/carts": {
            "get": {
                "operationId": "carts.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart items retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "carts.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Cart"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/carts/{cart}": {
            "get": {
                "operationId": "carts.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "required": true,
                        "description": "The cart ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart item retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "carts.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "required": true,
                        "description": "The cart ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart item updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "carts.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Cart"
                ],
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "required": true,
                        "description": "The cart ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart item removed successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/my-cart": {
            "get": {
                "operationId": "carts.my-cart",
                "summary": "Get cart items for a specific user",
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User cart retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "carts.clear-my-cart",
                "summary": "Clear all cart items for a user",
                "tags": [
                    "Cart"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cart cleared successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/categories": {
            "get": {
                "operationId": "admin.categories.index",
                "summary": "Admin: Display a listing of all categories with additional details",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Categories retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "categories.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/categories/{category}": {
            "get": {
                "operationId": "admin.categories.show",
                "summary": "Admin: Display the specified category with additional details",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "categories.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "categories.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                409
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cannot delete category with associated products."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "operationId": "categories.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Categories retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{category}": {
            "get": {
                "operationId": "categories.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "operationId": "orders.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Orders retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "orders.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders/{order}": {
            "get": {
                "operationId": "orders.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "orders.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/my-orders": {
            "get": {
                "operationId": "orders.my-orders",
                "summary": "Get orders for the authenticated user",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "enum": [
                                "pending",
                                "paid",
                                "shipped",
                                "completed",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User orders retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders/{order}/status": {
            "patch": {
                "operationId": "orders.status",
                "summary": "Update order status",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "shipped",
                                            "completed",
                                            "cancelled"
                                        ]
                                    }
                                },
                                "required": [
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order status updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/orders/from-cart": {
            "post": {
                "operationId": "orders.from-cart",
                "summary": "Create order from cart items",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "shipping_address_id": {
                                        "type": "integer"
                                    },
                                    "payment_proof": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 255
                                    },
                                    "cart_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "shipping_address_id",
                                    "cart_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order created from cart successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                400
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No valid cart items found."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/order_details": {
            "get": {
                "operationId": "order_details.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "OrderDetail"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order details retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "order_details.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "OrderDetail"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderDetailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create order detail."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order detail created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/order_details/{orderDetail}": {
            "get": {
                "operationId": "order_details.show",
                "summary": "Display the specified resource",
                "tags": [
                    "OrderDetail"
                ],
                "parameters": [
                    {
                        "name": "orderDetail",
                        "in": "path",
                        "required": true,
                        "description": "The order detail ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order detail retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "order_details.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "OrderDetail"
                ],
                "parameters": [
                    {
                        "name": "orderDetail",
                        "in": "path",
                        "required": true,
                        "description": "The order detail ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderDetailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update order detail."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order detail updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "order_details.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "OrderDetail"
                ],
                "parameters": [
                    {
                        "name": "orderDetail",
                        "in": "path",
                        "required": true,
                        "description": "The order detail ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete order detail."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order detail deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/orders/{orderId}/details": {
            "get": {
                "operationId": "order_details.by_order",
                "summary": "Get order details for a specific order",
                "tags": [
                    "OrderDetail"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order details retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                404
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No order details found for this order."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{productId}/order-details": {
            "get": {
                "operationId": "order_details.by_product",
                "summary": "Get order details for a specific product",
                "tags": [
                    "OrderDetail"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product order details retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/order-details/stats": {
            "get": {
                "operationId": "order_details.stats",
                "summary": "Get order detail statistics",
                "tags": [
                    "OrderDetail"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order detail statistics retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/products": {
            "get": {
                "operationId": "admin.products.index",
                "summary": "Admin: Display a listing of all products with additional filters",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Products retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "products.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/admin/products/{product}": {
            "get": {
                "operationId": "admin.products.show",
                "summary": "Admin: Display the specified product with additional details",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "products.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "products.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                409
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cannot delete product that is in carts or orders."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "operationId": "products.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Products retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{product}": {
            "get": {
                "operationId": "products.show",
                "summary": "Display the specified resource",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "required": true,
                        "description": "The product ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Product retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/user_addresses": {
            "get": {
                "operationId": "user_addresses.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "UserAddress"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User addresses retrieved successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "to",
                                                "per_page",
                                                "last_page",
                                                "total",
                                                "has_more_pages"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "user_addresses.store",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "UserAddress"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                201
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User address created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/user_addresses/{userAddress}": {
            "get": {
                "operationId": "user_addresses.show",
                "summary": "Display the specified resource",
                "tags": [
                    "UserAddress"
                ],
                "parameters": [
                    {
                        "name": "userAddress",
                        "in": "path",
                        "required": true,
                        "description": "The user address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User address retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            },
            "put": {
                "operationId": "user_addresses.update",
                "summary": "Update the specified resource in storage",
                "tags": [
                    "UserAddress"
                ],
                "parameters": [
                    {
                        "name": "userAddress",
                        "in": "path",
                        "required": true,
                        "description": "The user address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User address updated successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "user_addresses.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "UserAddress"
                ],
                "parameters": [
                    {
                        "name": "userAddress",
                        "in": "path",
                        "required": true,
                        "description": "The user address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User address deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                409
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cannot delete address that is used in orders."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        },
        "/my-addresses": {
            "get": {
                "operationId": "user_addresses.my-addresses",
                "summary": "Get addresses for the authenticated user",
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User addresses retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                401
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthenticated - No user found"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-addresses/default": {
            "get": {
                "operationId": "user_addresses.my-default",
                "summary": "Get the authenticated user's default address",
                "tags": [
                    "UserAddress"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Default address retrieved successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                404
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No default address found for this user."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                401
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthenticated - No user found"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user_addresses/{userAddress}/set-default": {
            "patch": {
                "operationId": "user_addresses.set-default",
                "summary": "Set an address as default for the authenticated user",
                "tags": [
                    "UserAddress"
                ],
                "parameters": [
                    {
                        "name": "userAddress",
                        "in": "path",
                        "required": true,
                        "description": "The user address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                500
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                200
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Address set as default successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                403
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Forbidden - This address does not belong to you."
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "enum": [
                                                401
                                            ]
                                        },
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthenticated - No user found"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "code",
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "password_confirmation": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "title": "RegisterRequest"
            },
            "StoreCartRequest": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    }
                },
                "required": [
                    "product_id",
                    "quantity"
                ],
                "title": "StoreCartRequest"
            },
            "StoreCategoryRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ],
                "title": "StoreCategoryRequest"
            },
            "StoreOrderDetailRequest": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    }
                },
                "required": [
                    "order_id",
                    "product_id",
                    "quantity",
                    "price"
                ],
                "title": "StoreOrderDetailRequest"
            },
            "StoreOrderRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "shipping_address_id": {
                        "type": "integer"
                    },
                    "total_price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    },
                    "payment_proof": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "shipped",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "order_details": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product_id": {
                                    "type": "integer"
                                },
                                "quantity": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 999
                                },
                                "price": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 999999.99
                                }
                            },
                            "required": [
                                "product_id",
                                "quantity",
                                "price"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "user_id",
                    "shipping_address_id",
                    "total_price",
                    "status",
                    "order_details"
                ],
                "title": "StoreOrderRequest"
            },
            "StoreProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "image_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 255
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    },
                    "category_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name",
                    "price"
                ],
                "title": "StoreProductRequest"
            },
            "StoreUserAddressRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "label": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 100
                    },
                    "recipient_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "address_line_1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "user_id",
                    "recipient_name",
                    "phone",
                    "address_line_1",
                    "city",
                    "state",
                    "postal_code",
                    "country"
                ],
                "title": "StoreUserAddressRequest"
            },
            "UpdateCartRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    }
                },
                "title": "UpdateCartRequest"
            },
            "UpdateCategoryRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateCategoryRequest"
            },
            "UpdateOrderDetailRequest": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 999
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    }
                },
                "title": "UpdateOrderDetailRequest"
            },
            "UpdateOrderRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "shipping_address_id": {
                        "type": "integer"
                    },
                    "total_price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    },
                    "payment_proof": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "shipped",
                            "completed",
                            "cancelled"
                        ]
                    }
                },
                "title": "UpdateOrderRequest"
            },
            "UpdateProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "image_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "maxLength": 255
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    },
                    "category_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name",
                    "price"
                ],
                "title": "UpdateProductRequest"
            },
            "UpdateUserAddressRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "label": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 100
                    },
                    "recipient_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "address_line_1": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "title": "UpdateUserAddressRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}